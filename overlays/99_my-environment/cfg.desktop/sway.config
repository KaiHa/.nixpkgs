# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term alacritty --live-config-reload -e tmux
# Your preferred application launcher
set $menu dmenu_path | bemenu --ignorecase --prompt="Run:" --list=12 --prefix=" -> " --scrollbar=autohide --tf="#cccccc" --ff="#ffffff" --hf="#ffffff" --hb="#4477aa" --scf="#cccccc" | xargs swaymsg -- exec

### Output configuration
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs
output LVDS-1 position 0,0
output * bg ~/.config/sway/keep-calm.png center

bindswitch lid:on exec toggle-monitor-setup.sh disable
bindswitch lid:off exec toggle-monitor-setup.sh enable

exec_always echo $DBUS_SESSION_BUS_ADDRESS > ~/.dbus-session-bus-address

exec swayidle -w \
         timeout 600 'swaymsg "output * dpms off"' \
              resume 'swaymsg "output * dpms on"'

exec alacritty --live-config-reload -e tmux -- new-session -s Q
for_window [title="tmux Q.*"] move scratchpad; border normal; resize set 840 600


### Input configuration

input "1:1:AT_Translated_Set_2_keyboard" {
  xkb_options caps:escape,shift:both_capslock,compose:prsc
}

input "2:10:TPPS/2_IBM_TrackPoint" {
  accel_profile flat
  pointer_accel 1.0
}

input "SynPS/2 Synaptics TouchPad" {
  pointer_accel 1.0
}

# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

#xwayland enable
default_border pixel
default_floating_border normal
client.focused #4c7899 #285577 #ffffff #ff8800 #ff0000
client.unfocused #333333 #222222 #888888 #bbbbbb #bbbbbb
mouse_warping container
floating_maximum_size 1200 x 700

seat seat0 hide_cursor 1200

for_window [floating] border normal
for_window [class="Emacs"] move window to workspace emacs
for_window [class="Firefox"] move window to workspace web
for_window [class="Tor Browser"] move window to workspace tor
for_window [app_id="firefox"] move window to workspace web
for_window [title="JACK Audio Connection Kit.*"] floating enable; move position 1 1
for_window [title="Qsynth - A fluidsynth .*"] floating enable; move position 1 105
for_window [title="Rosegarden Transport"] floating enable; move position 400 20
for_window [title="Virtual Keyboard .*"] floating enable; move position 400 1
for_window [app_id="com.nitrokey."] floating enable
    
### Key bindings
#
# Basics:
#
    # start a terminal
    bindsym $mod+Shift+Return exec $term

    # kill focused window
    bindsym $mod+Shift+c kill

    # start your launcher
    bindsym $mod+p exec $menu

    bindsym $mod+o exec sway-window-select
    bindsym $mod+m exec ~/bin/toggle-light-dark-theme.sh

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # reload the configuration file
    bindsym $mod+q reload

    # exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+q exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

    bindsym XF86Launch1 exec run-or-raise.sh "emacsclient -c" Emacs
    bindsym XF86Launch5 exec run-or-raise.sh "emacsclient -c" Emacs
    bindsym XF86Launch6 exec run-or-raise.sh firefox firefox
    bindsym XF86AudioLowerVolume exec amixer -D hw sset Master 2%-
    bindsym XF86AudioRaiseVolume exec amixer -D hw sset Master 2%+
    bindsym XF86AudioMute exec amixer -D hw sset Master toggle
    bindsym XF86MonBrightnessDown exec sudo light -U 5
    bindsym XF86MonBrightnessUp exec sudo light -A 4
    bindsym XF86Display exec toggle-monitor-setup.sh
    bindsym XF86Launch9 exec toggle-monitor-setup.sh


#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # _move_ the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # switch to workspace
    bindsym $mod+1 workspace 1
    bindsym $mod+2 workspace 2
    bindsym $mod+3 workspace 3
    bindsym $mod+4 workspace 4
    bindsym $mod+5 workspace 5
    bindsym $mod+6 workspace 6
    bindsym $mod+7 workspace 7
    bindsym $mod+8 workspace tor
    bindsym $mod+9 workspace emacs
    bindsym $mod+0 workspace web

    bindsym $mod+Escape workspace back_and_forth

    # move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace 1
    bindsym $mod+Shift+2 move container to workspace 2
    bindsym $mod+Shift+3 move container to workspace 3
    bindsym $mod+Shift+4 move container to workspace 4
    bindsym $mod+Shift+5 move container to workspace 5
    bindsym $mod+Shift+6 move container to workspace 6
    bindsym $mod+Shift+7 move container to workspace 7
    bindsym $mod+Shift+8 move container to workspace tor
    bindsym $mod+Shift+9 move container to workspace emacs
    bindsym $mod+Shift+0 move container to workspace web

    bindsym $mod+Mod1+$left move workspace to left
    bindsym $mod+Mod1+$right move workspace to right

    bindsym $mod+Mod1+Left move workspace to left
    bindsym $mod+Mod1+Right move workspace to right

#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
    bindsym F12        scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    position top

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    status_command status.sh
    position bottom

    colors {
        statusline #ffffff
        background #323232
    }
}
